package pl.jraczynski.shoppinglist.data.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

@JsonClass(generateAdapter = true)
data class Product(
    @Json(name = "added_countries_tags")
    val addedCountriesTags: List<Any>?,
    @Json(name = "additives_n")
    val additivesN: Int?,
    @Json(name = "additives_old_n")
    val additivesOldN: Int?,
    @Json(name = "additives_old_tags")
    val additivesOldTags: List<Any>?,
    @Json(name = "additives_original_tags")
    val additivesOriginalTags: List<Any>?,
    @Json(name = "additives_tags")
    val additivesTags: List<Any>?,
    @Json(name = "allergens")
    val allergens: String?,
    @Json(name = "allergens_from_ingredients")
    val allergensFromIngredients: String?,
    @Json(name = "allergens_from_user")
    val allergensFromUser: String?,
    @Json(name = "allergens_hierarchy")
    val allergensHierarchy: List<String>?,
    @Json(name = "allergens_lc")
    val allergensLc: String?,
    @Json(name = "allergens_tags")
    val allergensTags: List<String>?,
    @Json(name = "amino_acids_tags")
    val aminoAcidsTags: List<Any>?,
    @Json(name = "brands")
    val brands: String?,
    @Json(name = "brands_tags")
    val brandsTags: List<String>?,
    @Json(name = "categories")
    val categories: String?,
    @Json(name = "categories_hierarchy")
    val categoriesHierarchy: List<String>?,
    @Json(name = "categories_lc")
    val categoriesLc: String?,
    @Json(name = "categories_old")
    val categoriesOld: String?,
    @Json(name = "categories_properties")
    val categoriesProperties: CategoriesProperties?,
    @Json(name = "categories_properties_tags")
    val categoriesPropertiesTags: List<String>?,
    @Json(name = "categories_tags")
    val categoriesTags: List<String>?,
    @Json(name = "checkers_tags")
    val checkersTags: List<Any>?,
    @Json(name = "cities_tags")
    val citiesTags: List<Any>?,
    @Json(name = "code")
    val code: String?,
    @Json(name = "codes_tags")
    val codesTags: List<String>?,
    @Json(name = "compared_to_category")
    val comparedToCategory: String?,
    @Json(name = "complete")
    val complete: Int?,
    @Json(name = "completeness")
    val completeness: Double?,
    @Json(name = "correctors_tags")
    val correctorsTags: List<String>?,
    @Json(name = "countries")
    val countries: String?,
    @Json(name = "countries_beforescanbot")
    val countriesBeforescanbot: String?,
    @Json(name = "countries_hierarchy")
    val countriesHierarchy: List<String>?,
    @Json(name = "countries_lc")
    val countriesLc: String?,
    @Json(name = "countries_tags")
    val countriesTags: List<String>?,
    @Json(name = "created_t")
    val createdT: Int?,
    @Json(name = "creator")
    val creator: String?,
    @Json(name = "data_quality_bugs_tags")
    val dataQualityBugsTags: List<Any>?,
    @Json(name = "data_quality_errors_tags")
    val dataQualityErrorsTags: List<Any>?,
    @Json(name = "data_quality_info_tags")
    val dataQualityInfoTags: List<String>?,
    @Json(name = "data_quality_tags")
    val dataQualityTags: List<String>?,
    @Json(name = "data_quality_warnings_tags")
    val dataQualityWarningsTags: List<String>?,
    @Json(name = "data_sources")
    val dataSources: String?,
    @Json(name = "data_sources_tags")
    val dataSourcesTags: List<String>?,
    @Json(name = "debug_param_sorted_langs")
    val debugParamSortedLangs: List<String>?,
    @Json(name = "ecoscore_data")
    val ecoscoreData: EcoscoreData?,
    @Json(name = "ecoscore_grade")
    val ecoscoreGrade: String?,
    @Json(name = "ecoscore_score")
    val ecoscoreScore: Int?,
    @Json(name = "ecoscore_tags")
    val ecoscoreTags: List<String>?,
    @Json(name = "editors_tags")
    val editorsTags: List<String>?,
    @Json(name = "emb_codes")
    val embCodes: String?,
    @Json(name = "emb_codes_tags")
    val embCodesTags: List<Any>?,
    @Json(name = "entry_dates_tags")
    val entryDatesTags: List<String>?,
    @Json(name = "expiration_date")
    val expirationDate: String?,
    @Json(name = "food_groups")
    val foodGroups: String?,
    @Json(name = "food_groups_tags")
    val foodGroupsTags: List<String>?,
    @Json(name = "generic_name")
    val genericName: String?,
    @Json(name = "generic_name_en")
    val genericNameEn: String?,
    @Json(name = "_id")
    val id: String?,
    @Json(name = "image_front_small_url")
    val imageFrontSmallUrl: String?,
    @Json(name = "image_front_thumb_url")
    val imageFrontThumbUrl: String?,
    @Json(name = "image_front_url")
    val imageFrontUrl: String?,
    @Json(name = "image_ingredients_small_url")
    val imageIngredientsSmallUrl: String?,
    @Json(name = "image_ingredients_thumb_url")
    val imageIngredientsThumbUrl: String?,
    @Json(name = "image_ingredients_url")
    val imageIngredientsUrl: String?,
    @Json(name = "image_nutrition_small_url")
    val imageNutritionSmallUrl: String?,
    @Json(name = "image_nutrition_thumb_url")
    val imageNutritionThumbUrl: String?,
    @Json(name = "image_nutrition_url")
    val imageNutritionUrl: String?,
    @Json(name = "image_packaging_small_url")
    val imagePackagingSmallUrl: String?,
    @Json(name = "image_packaging_thumb_url")
    val imagePackagingThumbUrl: String?,
    @Json(name = "image_packaging_url")
    val imagePackagingUrl: String?,
    @Json(name = "image_small_url")
    val imageSmallUrl: String?,
    @Json(name = "image_thumb_url")
    val imageThumbUrl: String?,
    @Json(name = "image_url")
    val imageUrl: String?,
    @Json(name = "images")
    val images: Images?,
    @Json(name = "informers_tags")
    val informersTags: List<String>?,
    @Json(name = "ingredients")
    val ingredients: List<Ingredient>?,
    @Json(name = "ingredients_analysis")
    val ingredientsAnalysis: IngredientsAnalysis?,
    @Json(name = "ingredients_analysis_tags")
    val ingredientsAnalysisTags: List<String>?,
    @Json(name = "ingredients_from_or_that_may_be_from_palm_oil_n")
    val ingredientsFromOrThatMayBeFromPalmOilN: Int?,
    @Json(name = "ingredients_from_palm_oil_n")
    val ingredientsFromPalmOilN: Int?,
    @Json(name = "ingredients_from_palm_oil_tags")
    val ingredientsFromPalmOilTags: List<Any>?,
    @Json(name = "ingredients_hierarchy")
    val ingredientsHierarchy: List<String>?,
    @Json(name = "ingredients_n")
    val ingredientsN: Int?,
    @Json(name = "ingredients_n_tags")
    val ingredientsNTags: List<String>?,
    @Json(name = "ingredients_original_tags")
    val ingredientsOriginalTags: List<String>?,
    @Json(name = "ingredients_percent_analysis")
    val ingredientsPercentAnalysis: Int?,
    @Json(name = "ingredients_tags")
    val ingredientsTags: List<String>?,
    @Json(name = "ingredients_text")
    val ingredientsText: String?,
    @Json(name = "ingredients_text_en")
    val ingredientsTextEn: String?,
    @Json(name = "ingredients_text_with_allergens")
    val ingredientsTextWithAllergens: String?,
    @Json(name = "ingredients_text_with_allergens_en")
    val ingredientsTextWithAllergensEn: String?,
    @Json(name = "ingredients_that_may_be_from_palm_oil_n")
    val ingredientsThatMayBeFromPalmOilN: Int?,
    @Json(name = "ingredients_that_may_be_from_palm_oil_tags")
    val ingredientsThatMayBeFromPalmOilTags: List<Any>?,
    @Json(name = "ingredients_with_specified_percent_n")
    val ingredientsWithSpecifiedPercentN: Int?,
    @Json(name = "ingredients_with_specified_percent_sum")
    val ingredientsWithSpecifiedPercentSum: Int?,
    @Json(name = "ingredients_with_unspecified_percent_n")
    val ingredientsWithUnspecifiedPercentN: Int?,
    @Json(name = "ingredients_with_unspecified_percent_sum")
    val ingredientsWithUnspecifiedPercentSum: Int?,
    @Json(name = "interface_version_created")
    val interfaceVersionCreated: String?,
    @Json(name = "interface_version_modified")
    val interfaceVersionModified: String?,
    @Json(name = "_keywords")
    val keywords: List<String>?,
    @Json(name = "known_ingredients_n")
    val knownIngredientsN: Int?,
    @Json(name = "labels")
    val labels: String?,
    @Json(name = "labels_hierarchy")
    val labelsHierarchy: List<String>?,
    @Json(name = "labels_lc")
    val labelsLc: String?,
    @Json(name = "labels_old")
    val labelsOld: String?,
    @Json(name = "labels_tags")
    val labelsTags: List<String>?,
    @Json(name = "lang")
    val lang: String?,
    @Json(name = "languages")
    val languages: Languages?,
    @Json(name = "languages_codes")
    val languagesCodes: LanguagesCodes?,
    @Json(name = "languages_hierarchy")
    val languagesHierarchy: List<String>?,
    @Json(name = "languages_tags")
    val languagesTags: List<String>?,
    @Json(name = "last_edit_dates_tags")
    val lastEditDatesTags: List<String>?,
    @Json(name = "last_editor")
    val lastEditor: String?,
    @Json(name = "last_image_dates_tags")
    val lastImageDatesTags: List<String>?,
    @Json(name = "last_image_t")
    val lastImageT: Int?,
    @Json(name = "last_modified_by")
    val lastModifiedBy: String?,
    @Json(name = "last_modified_t")
    val lastModifiedT: Int?,
    @Json(name = "lc")
    val lc: String?,
    @Json(name = "link")
    val link: String?,
    @Json(name = "main_countries_tags")
    val mainCountriesTags: List<Any>?,
    @Json(name = "manufacturing_places")
    val manufacturingPlaces: String?,
    @Json(name = "manufacturing_places_tags")
    val manufacturingPlacesTags: List<Any>?,
    @Json(name = "max_imgid")
    val maxImgid: String?,
    @Json(name = "minerals_tags")
    val mineralsTags: List<Any>?,
    @Json(name = "misc_tags")
    val miscTags: List<String>?,
    @Json(name = "no_nutrition_data")
    val noNutritionData: String?,
    @Json(name = "nova_group")
    val novaGroup: Int?,
    @Json(name = "nova_group_debug")
    val novaGroupDebug: String?,
    @Json(name = "nova_groups")
    val novaGroups: String?,
    @Json(name = "nova_groups_markers")
    val novaGroupsMarkers: NovaGroupsMarkers?,
    @Json(name = "nova_groups_tags")
    val novaGroupsTags: List<String>?,
    @Json(name = "nucleotides_tags")
    val nucleotidesTags: List<Any>?,
    @Json(name = "nutrient_levels")
    val nutrientLevels: NutrientLevels?,
    @Json(name = "nutrient_levels_tags")
    val nutrientLevelsTags: List<String>?,
    @Json(name = "nutriments")
    val nutriments: Nutriments?,
    @Json(name = "nutriscore_data")
    val nutriscoreData: NutriscoreData?,
    @Json(name = "nutriscore_grade")
    val nutriscoreGrade: String?,
    @Json(name = "nutriscore_score")
    val nutriscoreScore: Int?,
    @Json(name = "nutriscore_score_opposite")
    val nutriscoreScoreOpposite: Int?,
    @Json(name = "nutrition_data")
    val nutritionData: String?,
    @Json(name = "nutrition_data_per")
    val nutritionDataPer: String?,
    @Json(name = "nutrition_data_prepared")
    val nutritionDataPrepared: String?,
    @Json(name = "nutrition_data_prepared_per")
    val nutritionDataPreparedPer: String?,
    @Json(name = "nutrition_grade_fr")
    val nutritionGradeFr: String?,
    @Json(name = "nutrition_grades")
    val nutritionGrades: String?,
    @Json(name = "nutrition_grades_tags")
    val nutritionGradesTags: List<String>?,
    @Json(name = "nutrition_score_beverage")
    val nutritionScoreBeverage: Int?,
    @Json(name = "nutrition_score_debug")
    val nutritionScoreDebug: String?,
    @Json(name = "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients")
    val nutritionScoreWarningFruitsVegetablesNutsEstimateFromIngredients: Int?,
    @Json(name = "nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value")
    val nutritionScoreWarningFruitsVegetablesNutsEstimateFromIngredientsValue: Double?,
    @Json(name = "nutrition_score_warning_no_fiber")
    val nutritionScoreWarningNoFiber: Int?,
    @Json(name = "origin")
    val origin: String?,
    @Json(name = "origin_en")
    val originEn: String?,
    @Json(name = "origins")
    val origins: String?,
    @Json(name = "origins_hierarchy")
    val originsHierarchy: List<Any>?,
    @Json(name = "origins_lc")
    val originsLc: String?,
    @Json(name = "origins_tags")
    val originsTags: List<Any>?,
    @Json(name = "other_nutritional_substances_tags")
    val otherNutritionalSubstancesTags: List<Any>?,
    @Json(name = "packaging")
    val packaging: String?,
    @Json(name = "packaging_hierarchy")
    val packagingHierarchy: List<String>?,
    @Json(name = "packaging_lc")
    val packagingLc: String?,
    @Json(name = "packaging_materials_tags")
    val packagingMaterialsTags: List<String>?,
    @Json(name = "packaging_old")
    val packagingOld: String?,
    @Json(name = "packaging_old_before_taxonomization")
    val packagingOldBeforeTaxonomization: String?,
    @Json(name = "packaging_recycling_tags")
    val packagingRecyclingTags: List<Any>?,
    @Json(name = "packaging_shapes_tags")
    val packagingShapesTags: List<String>?,
    @Json(name = "packaging_tags")
    val packagingTags: List<String>?,
    @Json(name = "packaging_text")
    val packagingText: String?,
    @Json(name = "packaging_text_en")
    val packagingTextEn: String?,
    @Json(name = "packagings_materials")
    val packagingsMaterials: PackagingsMaterials?,
    @Json(name = "packagings_n")
    val packagingsN: Int?,
    @Json(name = "photographers_tags")
    val photographersTags: List<String>?,
    @Json(name = "pnns_groups_1")
    val pnnsGroups1: String?,
    @Json(name = "pnns_groups_1_tags")
    val pnnsGroups1Tags: List<String>?,
    @Json(name = "pnns_groups_2")
    val pnnsGroups2: String?,
    @Json(name = "pnns_groups_2_tags")
    val pnnsGroups2Tags: List<String>?,
    @Json(name = "popularity_key")
    val popularityKey: Long?,
    @Json(name = "popularity_tags")
    val popularityTags: List<String>?,
    @Json(name = "product_name")
    val productName: String?,
    @Json(name = "product_name_en")
    val productNameEn: String?,
    @Json(name = "purchase_places")
    val purchasePlaces: String?,
    @Json(name = "purchase_places_tags")
    val purchasePlacesTags: List<Any>?,
    @Json(name = "quantity")
    val quantity: String?,
    @Json(name = "removed_countries_tags")
    val removedCountriesTags: List<Any>?,
    @Json(name = "rev")
    val rev: Int?,
    @Json(name = "scans_n")
    val scansN: Int?,
    @Json(name = "sortkey")
    val sortkey: Int?,
    @Json(name = "states")
    val states: String?,
    @Json(name = "states_hierarchy")
    val statesHierarchy: List<String>?,
    @Json(name = "states_tags")
    val statesTags: List<String>?,
    @Json(name = "stores")
    val stores: String?,
    @Json(name = "stores_tags")
    val storesTags: List<Any>?,
    @Json(name = "teams")
    val teams: String?,
    @Json(name = "teams_tags")
    val teamsTags: List<String>?,
    @Json(name = "traces")
    val traces: String?,
    @Json(name = "traces_from_ingredients")
    val tracesFromIngredients: String?,
    @Json(name = "traces_from_user")
    val tracesFromUser: String?,
    @Json(name = "traces_hierarchy")
    val tracesHierarchy: List<String>?,
    @Json(name = "traces_lc")
    val tracesLc: String?,
    @Json(name = "traces_tags")
    val tracesTags: List<String>?,
    @Json(name = "unique_scans_n")
    val uniqueScansN: Int?,
    @Json(name = "unknown_ingredients_n")
    val unknownIngredientsN: Int?,
    @Json(name = "unknown_nutrients_tags")
    val unknownNutrientsTags: List<Any>?,
    @Json(name = "update_key")
    val updateKey: String?,
    @Json(name = "vitamins_tags")
    val vitaminsTags: List<Any>?
)